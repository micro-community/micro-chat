syntax = "proto3";

package chat;
option go_package = ".;chat";

service Chat {
  //支持幂等调用的接口,对相同的人用户创建会话，默认总是返回同一个chat，除非指定强制创建为新会话的参数
  rpc New(NewRequest) returns (NewResponse);
  //删除一个聊天，除非指定彻底销毁
  rpc Remove(RemoveRequest) returns (RemoveResponse);
  // 查询某个chat中的历史消息
  rpc History(HistoryRequest) returns (HistoryResponse);
  // Send a single message to the chat，当发送消息给服务端时，消息会被添加到历史消息，同时转发给其他的连接用户。
  // 客户端的消息参数中应当携带chat_id和user_id 以便服务端识别会话和用户
  rpc Send(SendRequest) returns (SendResponse);
  // 双向stream的方式，连接到某一个会话(或者聊天室)，
  rpc Connect(stream Message) returns (stream Message);
}

// NewRequest contains the infromation needed to create a new chat
message NewRequest {
  repeated string user_ids = 1;
  bool forceNew = 2;

}
// NewResponse contains the chat id for the users
message NewResponse {
  string chat_id = 1;
}

message RemoveResponse {
  string chat_id = 1;
}

message RemoveRequest {
  string chat_id = 1;
  bool  is_destoryed =2; //是否强制销毁聊天
}

// HistoryRequest 可能很多，支持按时间段查询或者，按数量查询，两种方式
message HistoryRequest {
  string chat_id = 1;
  int64  from_timestamp =2;
  int64  to_timestamp =3;
  int32  recent_count =4;
  bool  by_time =5;
}

// HistoryResponse contains the historical messages in a chat
message HistoryResponse {
  repeated Message messages = 1;
}

// SendRequest contains a single message to send to a chat
message SendRequest {
  // a client side id, should be validated by the server to make the request retry safe
  string client_id = 1;
  //chat ID id of the chat that the message is being sent to / from
  string chat_id = 2;
  // id of the user who sent the message
  string user_id = 3;
  // subject of the message
  string subject = 4;
  // text of the message
  string text = 5;
  // sent_at timestamp of this message
  int64 sent_at =6;
}

// SendResponse is a blank message returned when a message is successfully created
message SendResponse {}

// Message:  聊天中的消息体
message Message {
  // id of the message, allocated by the server
  string id = 1;
  // a client side id, should be validated by the server to make the request retry safe
  string client_id = 2;
  // id of the chat the message is being sent to / from
  string chat_id = 3;
  // id of the user who sent the message
  string user_id = 4;
  // time time the message was sent in unix format 
  int64 sent_at = 5;
  // subject of the message
  string subject = 6;
  // text of the message
  string text = 7;
}